package testProject;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Base64;

public class Base64ToFileExample1 {
    public static void main(String... args) throws IOException {
        String base64String = "data:image/jpeg;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";

        // Convert Base64 String to File
        byte[] decodedBytes = Base64.getDecoder().decode(base64String);
        Files.write(Paths.get("src/test/DownloadedImage/image.jpeg"), decodedBytes);
    }
}